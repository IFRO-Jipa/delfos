<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!-- Indica ao spring que as classes estao sendo gerenciadas por annotation -->
	<context:annotation-config />



	<!-- Aonde o spring vai buscar as anotacoes de classes referente aos componentes 
		do sistema -->

	<context:component-scan base-package="br.com.delfos" />
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

		<!-- Nome do unit criado para gerenciamento do Hibernate -->

		<property name="persistenceUnitName" value="mysqlDataSource" />

		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="database" value="MYSQL" />
			</bean>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>


	<!-- Informar ao spring onde esta as classes de repositorio, para o spring-data 
		fazer a mÃ¡gica -->
	<jpa:repositories base-package="br.com.delfos.repository" />
</beans>